import requests
import datetime
from api import token_weather
from pprint import pprint



def get_weather(city, token_weather):

    smile_code = {
        "clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B",

    }

    try:
        r = requests.get(
            f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={token_weather}&units=metric&lang={"ru"}'

        )
        data = r.json()
        # pprint(data)


        name = data['name']
        weather_temp = data['main']['temp']

        weather_description = data["weather"][0]["main"]
        if weather_description in smile_code:
            descr = smile_code[weather_description]
        else:
            descr = "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –æ–∫–Ω–æ"

        weather_humidity = data['main']['humidity']
        weather_pressure = data['main']['pressure']
        weather_speed = data['wind']['speed']
        sunrise = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        daylight = datetime.datetime.fromtimestamp(data['sys']['sunset']) - datetime.datetime.fromtimestamp(
            data['sys']['sunrise'])

        print(
            f' ***{datetime.datetime.now().strftime("%Y-%m-%d %H:%M") }***\n'
            f' –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {name} {descr}\n –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_temp}¬∞\n D–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_humidity}%\n –î–∞–≤–ª–µ–Ω–∏–µ:'
            f' {weather_pressure} –º–º.—Ä—Ç.—Å—Ç \n –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {weather_speed}\n –†–∞—Å—Å–≤–µ—Ç: {sunrise} üåÖ \n –ó–∞–∫–∞—Ç: {sunset} üåá \n '
            f'–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {daylight}  '
        )

    except Exception as ex:
        print(ex)
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")


def main():
    city = input(" –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥: ")
    get_weather(city, token_weather)


if __name__ == "__main__":
    main()
